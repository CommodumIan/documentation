name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - ready_for_review
      - reopened
      - edited
      - synchronize
jobs:
  node-modules:
    runs-on: ubuntu-22.04
    name: 'Cache yarn modules'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('yarn.lock') }}
          # comment out "restore-keys" if you need to rebuild yarn from 0
          restore-keys: |
            ${{ runner.os }}-cache-node-modules-

      - name: Setup node
        uses: actions/setup-node@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version-file: '.nvmrc'
          # https://stackoverflow.com/questions/61010294/how-to-cache-yarn-packages-in-github-actions
          cache: yarn

      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --pure-lockfile

  lint-test-build:
    timeout-minutes: 60
    # docs need a lot of memory to run
    runs-on: self-hosted-runner
    name: '(CI) lint + unit test + build'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('yarn.lock') }}

      - name: Build
        run: |
          yarn build
          branch_slug="$(echo '${{ github.head_ref || github.ref_name }}' | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | cut -c 1-50 )"
          echo "Branch slug: ${branch_slug}"
          preview=$(printf "https://%s.%s.vega.rocks" "docs" "$branch_slug")
          echo PREVIEW=$preview >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry (ghcr)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to local Docker
        if: ${{ github.event_name == 'pull_request' }}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ghcr.io/vegaprotocol/docs:${{ github.event.pull_request.head.sha }}

      - name: Image digest
        if: ${{ github.event_name == 'pull_request' }}
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Add preview label
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          labels: docs-preview
          number: ${{ github.event.number }}

      # bucket creation in github.com/vegaprotocol/terraform//frontend
      - name: Publish dist to s3
        uses: jakejarvis/s3-sync-action@master
        if: ${{ github.event_name == 'push' }}
        with:
          args: --acl private --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: docs.vega.xyz
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1'
          SOURCE_DIR: 'build'

    outputs:
      preview: ${{ env.PREVIEW }}

  dist-preview:
    runs-on: ubuntu-latest
    needs:
      - lint-test-build
    if: ${{ github.event_name == 'pull_request' }}
    timeout-minutes: 60
    name: '(CD) comment preview links'
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: Previews

      - name: Wait for deployments
        run: |
          until curl -L --fail "${{ needs.lint-test-build.outputs.preview }}"; do
            echo "waiting for governance preview"
            sleep 5
          done

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        if: ${{ steps.fc.outputs.comment-id == 0 }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Preview: ${{ needs.lint-test-build.outputs.preview }}
